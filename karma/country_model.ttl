@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix schema: <http://schema.org/> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix scharp: <http://scharp.usc.isi.edu/ontology/> .
@prefix void: <http://rdfs.org/ns/void#> .
@prefix dct: <http://purl.org/dc/terms/> .
@prefix memex: <http://memexproxy.com/ontology/> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix prov: <http://www.w3.org/ns/prov#> .
@prefix xml: <http://www.w3.org/XML/1998/namespace> .
@prefix skos: <http://www.w3.org/2004/02/skos/core#> .
@prefix bibo: <http://purl.org/ontology/bibo/> .
@prefix dcat: <http://www.w3.org/ns/dcat#> .
@prefix foaf: <http://xmlns.com/foaf/0.1/> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix rr: <http://www.w3.org/ns/r2rml#> .
@prefix km-dev: <http://isi.edu/integration/karma/dev#> .

_:node1adkcunnnx1 a km-dev:R2RMLMapping ;
	km-dev:sourceName "allCountries_esc_gh_10000.tsv" ;
	km-dev:modelPublicationTime "1457752334071"^^xsd:long ;
	km-dev:modelVersion "1.7" ;
	km-dev:hasInputColumns "[[{\"columnName\":\"name\"}],[{\"columnName\":\"geonameid\"}],[{\"columnName\":\"admin4\"}],[{\"columnName\":\"admin3\"}],[{\"columnName\":\"ccode\"}],[{\"columnName\":\"fcode\"}],[{\"columnName\":\"admin1\"}],[{\"columnName\":\"admin2\"}]]" ;
	km-dev:hasOutputColumns "[[{\"columnName\":\"geoname_uri\"}],[{\"columnName\":\"name\"}],[{\"columnName\":\"country_uri\"}]]" ;
	km-dev:hasModelLabel "allCountries_esc_gh_10000.tsv" ;
	km-dev:hasBaseURI "http://localhost:8080/source/" ;
	km-dev:hasWorksheetHistory """[
    {
        \"commandName\": \"SubmitPythonTransformationCommand\",
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"type\": \"hNodeId\",
                \"value\": [{\"columnName\": \"geonameid\"}]
            },
            {
                \"name\": \"worksheetId\",
                \"type\": \"worksheetId\",
                \"value\": \"W\"
            },
            {
                \"name\": \"selectionName\",
                \"type\": \"other\",
                \"value\": \"DEFAULT_TEST\"
            },
            {
                \"name\": \"newColumnName\",
                \"type\": \"other\",
                \"value\": \"geoname_uri\"
            },
            {
                \"name\": \"transformationCode\",
                \"type\": \"other\",
                \"value\": \"return gn_geonames_uri(getValue(\\\"geonameid\\\"))\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"type\": \"other\",
                \"value\": \"\"
            },
            {
                \"name\": \"isJSONOutput\",
                \"type\": \"other\",
                \"value\": \"false\"
            },
            {
                \"name\": \"inputColumns\",
                \"type\": \"hNodeIdList\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"geonameid\\\"}]}]\"
            },
            {
                \"name\": \"outputColumns\",
                \"type\": \"hNodeIdList\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"geoname_uri\\\"}]}]\"
            }
        ],
        \"tags\": [\"Transformation\"]
    },
    {
        \"commandName\": \"SubmitPythonTransformationCommand\",
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"type\": \"hNodeId\",
                \"value\": [{\"columnName\": \"geoname_uri\"}]
            },
            {
                \"name\": \"worksheetId\",
                \"type\": \"worksheetId\",
                \"value\": \"W\"
            },
            {
                \"name\": \"selectionName\",
                \"type\": \"other\",
                \"value\": \"DEFAULT_TEST\"
            },
            {
                \"name\": \"newColumnName\",
                \"type\": \"other\",
                \"value\": \"country_uri\"
            },
            {
                \"name\": \"transformationCode\",
                \"type\": \"other\",
                \"value\": \"if getValue(\\\"fcode\\\") == \\\"PCLI\\\":\\n    return gn_geonames_adm_uri(getValue(\\\"fcode\\\"),getValue(\\\"ccode\\\"),getValue(\\\"admin1\\\"),getValue(\\\"admin2\\\"),getValue(\\\"admin3\\\"),getValue(\\\"admin4\\\"),getValue(\\\"geonameid\\\"))\\nelse:\\n    return \\\"\\\"\\n\"
            },
            {
                \"name\": \"errorDefaultValue\",
                \"type\": \"other\",
                \"value\": \"\"
            },
            {
                \"name\": \"isJSONOutput\",
                \"type\": \"other\",
                \"value\": \"false\"
            },
            {
                \"name\": \"inputColumns\",
                \"type\": \"hNodeIdList\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"geonameid\\\"}]},{\\\"value\\\":[{\\\"columnName\\\":\\\"admin4\\\"}]},{\\\"value\\\":[{\\\"columnName\\\":\\\"admin3\\\"}]},{\\\"value\\\":[{\\\"columnName\\\":\\\"ccode\\\"}]},{\\\"value\\\":[{\\\"columnName\\\":\\\"fcode\\\"}]},{\\\"value\\\":[{\\\"columnName\\\":\\\"admin1\\\"}]},{\\\"value\\\":[{\\\"columnName\\\":\\\"admin2\\\"}]}]\"
            },
            {
                \"name\": \"outputColumns\",
                \"type\": \"hNodeIdList\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"country_uri\\\"}]}]\"
            }
        ],
        \"tags\": [\"Transformation\"]
    },
    {
        \"commandName\": \"SetSemanticTypeCommand\",
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"type\": \"hNodeId\",
                \"value\": [{\"columnName\": \"name\"}]
            },
            {
                \"name\": \"worksheetId\",
                \"type\": \"worksheetId\",
                \"value\": \"W\"
            },
            {
                \"name\": \"selectionName\",
                \"type\": \"other\",
                \"value\": \"DEFAULT_TEST\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"type\": \"other\",
                \"value\": [{
                    \"DomainUri\": \"http://schema.org/Country\",
                    \"DomainId\": \"http://schema.org/Country1\",
                    \"isPrimary\": true,
                    \"FullType\": \"http://schema.org/name\",
                    \"DomainLabel\": \"schema:Country1 (add)\"
                }]
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"type\": \"other\",
                \"value\": true
            },
            {
                \"name\": \"rdfLiteralType\",
                \"type\": \"other\",
                \"value\": \"\"
            },
            {
                \"name\": \"inputColumns\",
                \"type\": \"hNodeIdList\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"name\\\"}]}]\"
            },
            {
                \"name\": \"outputColumns\",
                \"type\": \"hNodeIdList\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"name\\\"}]}]\"
            }
        ],
        \"tags\": [\"SemanticType\"]
    },
    {
        \"commandName\": \"SetMetaPropertyCommand\",
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"type\": \"hNodeId\",
                \"value\": [{\"columnName\": \"country_uri\"}]
            },
            {
                \"name\": \"worksheetId\",
                \"type\": \"worksheetId\",
                \"value\": \"W\"
            },
            {
                \"name\": \"selectionName\",
                \"type\": \"other\",
                \"value\": \"DEFAULT_TEST\"
            },
            {
                \"name\": \"metaPropertyName\",
                \"type\": \"other\",
                \"value\": \"isUriOfClass\"
            },
            {
                \"name\": \"metaPropertyUri\",
                \"type\": \"other\",
                \"value\": \"http://schema.org/Country\"
            },
            {
                \"name\": \"metaPropertyId\",
                \"type\": \"other\",
                \"value\": \"http://schema.org/Country1\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"type\": \"other\",
                \"value\": [{
                    \"DomainUri\": \"http://schema.org/Country\",
                    \"DomainId\": \"http://schema.org/Country1\",
                    \"isPrimary\": true,
                    \"FullType\": \"http://isi.edu/integration/karma/dev#classLink\",
                    \"DomainLabel\": \"schema:Country1\"
                }]
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"type\": \"other\",
                \"value\": true
            },
            {
                \"name\": \"rdfLiteralType\",
                \"type\": \"other\",
                \"value\": \"\"
            },
            {
                \"name\": \"inputColumns\",
                \"type\": \"hNodeIdList\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"country_uri\\\"}]}]\"
            },
            {
                \"name\": \"outputColumns\",
                \"type\": \"hNodeIdList\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"country_uri\\\"}]}]\"
            }
        ],
        \"tags\": [\"SemanticType\"]
    },
    {
        \"commandName\": \"SetSemanticTypeCommand\",
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"hNodeId\",
                \"type\": \"hNodeId\",
                \"value\": [{\"columnName\": \"geoname_uri\"}]
            },
            {
                \"name\": \"worksheetId\",
                \"type\": \"worksheetId\",
                \"value\": \"W\"
            },
            {
                \"name\": \"selectionName\",
                \"type\": \"other\",
                \"value\": \"DEFAULT_TEST\"
            },
            {
                \"name\": \"SemanticTypesArray\",
                \"type\": \"other\",
                \"value\": [{
                    \"DomainUri\": \"http://schema.org/Country\",
                    \"DomainId\": \"http://schema.org/Country1\",
                    \"isPrimary\": true,
                    \"FullType\": \"http://schema.org/sameAs\",
                    \"DomainLabel\": \"schema:Country1\"
                }]
            },
            {
                \"name\": \"trainAndShowUpdates\",
                \"type\": \"other\",
                \"value\": true
            },
            {
                \"name\": \"rdfLiteralType\",
                \"type\": \"other\",
                \"value\": \"\"
            },
            {
                \"name\": \"inputColumns\",
                \"type\": \"hNodeIdList\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"geoname_uri\\\"}]}]\"
            },
            {
                \"name\": \"outputColumns\",
                \"type\": \"hNodeIdList\",
                \"value\": \"[{\\\"value\\\":[{\\\"columnName\\\":\\\"geoname_uri\\\"}]}]\"
            }
        ],
        \"tags\": [\"SemanticType\"]
    },
    {
        \"commandName\": \"ChangeInternalNodeLinksCommand\",
        \"model\": \"new\",
        \"inputParameters\": [
            {
                \"name\": \"worksheetId\",
                \"type\": \"worksheetId\",
                \"value\": \"W\"
            },
            {
                \"name\": \"selectionName\",
                \"type\": \"other\",
                \"value\": \"DEFAULT_TEST\"
            },
            {
                \"name\": \"initialEdges\",
                \"type\": \"other\",
                \"value\": [{
                    \"edgeTargetId\": \"http://schema.org/Country1\",
                    \"edgeId\": \"http://schema.org/addressCountry\",
                    \"edgeSourceId\": \"http://schema.org/PostalAddress1\"
                }]
            },
            {
                \"name\": \"alignmentId\",
                \"type\": \"other\",
                \"value\": \"WSP3:WS5AL\"
            },
            {
                \"name\": \"newEdges\",
                \"type\": \"other\",
                \"value\": []
            },
            {
                \"name\": \"inputColumns\",
                \"type\": \"hNodeIdList\",
                \"value\": \"[]\"
            },
            {
                \"name\": \"outputColumns\",
                \"type\": \"hNodeIdList\",
                \"value\": \"[]\"
            }
        ],
        \"tags\": [\"Modeling\"]
    }
]""" .

km-dev:TriplesMap_01365dc5-a3c1-4943-958c-8f3ae3e93bca a rr:TriplesMap .

_:node1adkcunnnx1 km-dev:hasTriplesMap km-dev:TriplesMap_01365dc5-a3c1-4943-958c-8f3ae3e93bca .

km-dev:TriplesMap_01365dc5-a3c1-4943-958c-8f3ae3e93bca km-dev:isPartOfMapping _:node1adkcunnnx1 .

_:node1adkcunnnx2 rr:tableName "allCountries_esc_gh_10000.tsv" ;
	a rr:LogicalTable ;
	km-dev:isPartOfMapping _:node1adkcunnnx1 .

_:node1adkcunnnx1 km-dev:hasLogicalTable _:node1adkcunnnx2 .

km-dev:TriplesMap_01365dc5-a3c1-4943-958c-8f3ae3e93bca rr:logicalTable _:node1adkcunnnx2 ;
	rr:subjectMap _:node1adkcunnnx3 .

_:node1adkcunnnx1 km-dev:hasSubjectMap _:node1adkcunnnx3 .

_:node1adkcunnnx3 km-dev:isPartOfMapping _:node1adkcunnnx1 ;
	a rr:SubjectMap ;
	km-dev:alignmentNodeId "http://schema.org/Country1" ;
	rr:class schema:Country ;
	rr:template "{country_uri}" ;
	a km-dev:steinerTreeRootNode .

km-dev:PredicateObjectMap_475d2642-2294-4a58-a834-f89f1405841d rr:predicate schema:name .

_:node1adkcunnnx4 rr:column "name" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node1adkcunnnx1 .

_:node1adkcunnnx1 km-dev:hasObjectMap _:node1adkcunnnx4 .

km-dev:PredicateObjectMap_475d2642-2294-4a58-a834-f89f1405841d rr:objectMap _:node1adkcunnnx4 .

km-dev:TriplesMap_01365dc5-a3c1-4943-958c-8f3ae3e93bca rr:predicateObjectMap km-dev:PredicateObjectMap_475d2642-2294-4a58-a834-f89f1405841d .

km-dev:PredicateObjectMap_475d2642-2294-4a58-a834-f89f1405841d a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node1adkcunnnx1 .

_:node1adkcunnnx1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_475d2642-2294-4a58-a834-f89f1405841d .

km-dev:PredicateObjectMap_0e1de139-3289-42e4-a5b9-9bbe29351276 rr:predicate schema:sameAs .

_:node1adkcunnnx5 rr:column "geoname_uri" ;
	a rr:ObjectMap ;
	km-dev:isPartOfMapping _:node1adkcunnnx1 .

_:node1adkcunnnx1 km-dev:hasObjectMap _:node1adkcunnnx5 .

km-dev:PredicateObjectMap_0e1de139-3289-42e4-a5b9-9bbe29351276 rr:objectMap _:node1adkcunnnx5 .

km-dev:TriplesMap_01365dc5-a3c1-4943-958c-8f3ae3e93bca rr:predicateObjectMap km-dev:PredicateObjectMap_0e1de139-3289-42e4-a5b9-9bbe29351276 .

km-dev:PredicateObjectMap_0e1de139-3289-42e4-a5b9-9bbe29351276 a rr:PredicateObjectMap ;
	km-dev:isPartOfMapping _:node1adkcunnnx1 .

_:node1adkcunnnx1 km-dev:hasPredicateObjectMap km-dev:PredicateObjectMap_0e1de139-3289-42e4-a5b9-9bbe29351276 .
